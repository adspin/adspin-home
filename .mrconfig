# run this in mr bootstrap mode via:
# mr --trust-all bootstrap https://raw.github.com/altercation/$EShome/master/.mrconfig

[DEFAULT]
# Include all available libs.
include = cat /usr/share/mr/* 2>/dev/null || true
lib = git config --global credential.helper 'cache --timeout=3600';
      GITHUB="git clone https://github.com/altercation"
      ES=es-
      _Conform_Dotfiles ()
      {
      _df_root="$HOME/etc" _df_trash="$HOME/tmp/_df_trash" _known_df=()
      cd $HOME; rm -rf "$_df_trash"; mkdir -p "$_df_trash"
      _Clear_And_Link () {
          _df="$HOME/$(basename "$1")"; mv "$_df" "$_df_trash";
          ln -s "$1" "$_df" && _known_df=(${_known_df[@]} "$_df") || echo "FAILED TO LINK $1"; }
      find "$_df_root" -name ".*" ! -name ".git" -exec _Clear_And_Link \{\} \;
      _garbage="$(ls -A1)"; for _file in "${_known_df[@]}"; do _garbage="$(echo "$_garbage" | grep -v "$_file")"; done
      echo -e "\nFollowing dotfiles are unmanaged:"
      echo "$_garbage" | egrep "^\."
      }

# anx - git-annex - aud, img, vid
# inf - info, research (subdirs but monolithic)
# org - organization, tasks, notes (
# pro - projects
# rec - records
# sys - systems related (what here if not etc/bin/var)
# txt - txt/notes
# ent - entropy - tmp directory

[anx]
lib = TARGET=anx
checkout = $GITHUB/$ES$TARGET.git $TARGET
fixups = conform_links $TARGET
chain = true

[inf]
lib = TARGET=inf
checkout = $GITHUB/$ES$TARGET.git $TARGET
fixups = conform_links $TARGET
chain = true

[ord]
lib = TARGET=ord
checkout = $GITHUB/$ES$TARGET.git $TARGET
fixups = conform_links $TARGET
chain = true

[pro]
lib = TARGET=pro
checkout = $GITHUB/$ES$TARGET.git $TARGET
fixups = conform_links $TARGET
chain = true

[rec]
lib = TARGET=rec
checkout = $GITHUB/$ES$TARGET.git $TARGET
fixups = conform_links $TARGET
chain = true

[sys]
lib = TARGET=sys
checkout = $GITHUB/$ES$TARGET.git $TARGET
fixups = conform_links $TARGET
chain = true

[txt]
lib = TARGET=txt
checkout = $GITHUB/$ES$TARGET.git $TARGET
fixups = conform_links $TARGET
chain = true

[etc]
lib = TARGET=etc
checkout = $GITHUB/$ES$TARGET.git $TARGET
fixups = conform_links $TARGET
chain = true

[bin]
lib = TARGET=bin
checkout = $GITHUB/$ES$TARGET.git $TARGET
fixups = conform_links $TARGET
chain = true

[shr]

[ent]
# This is a dummy target, all it does is run fixups
# at the end of an update.
fixups = #$HOME/bin/conform
checkout = mkdir -p $HOME/ent
status = :
order = 25

[/etc]
# I use etckeeper to keep /etc in git.
# But it only works if I'm root, 
# and if it's not already in etc, skip it.
skip = ! test -d /etc/.git || ! test "$(whoami)" = root

